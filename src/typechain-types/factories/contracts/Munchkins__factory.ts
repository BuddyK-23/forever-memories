/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Munchkins, MunchkinsInterface } from "../../contracts/Munchkins";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "ticker",
        type: "string",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC725Y_DataKeysValuesEmptyArray",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC725Y_DataKeysValuesLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC725Y_MsgValueDisallowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "storedData",
        type: "bytes",
      },
    ],
    name: "InvalidExtensionAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "InvalidFunctionSelector",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP4TokenNameNotEditable",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP4TokenSymbolNotEditable",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP4TokenTypeNotEditable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "callIndex",
        type: "uint256",
      },
    ],
    name: "LSP8BatchCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8CannotSendToAddressZero",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8CannotUseAddressZeroAsOperator",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8InvalidTransferBatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "LSP8NonExistentTokenId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "LSP8NonExistingOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LSP8NotTokenOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LSP8NotTokenOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
    ],
    name: "LSP8NotifyTokenReceiverContractMissingLSP1Interface",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
    ],
    name: "LSP8NotifyTokenReceiverIsEOA",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "LSP8OperatorAlreadyAuthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "LSP8RevokeOperatorNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8TokenContractCannotHoldValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "LSP8TokenIdAlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8TokenIdFormatNotEditable",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8TokenIdsDataEmptyArray",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8TokenIdsDataLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8TokenOwnerCannotBeOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "LSP8TokenOwnerChanged",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "functionSelector",
        type: "bytes4",
      },
    ],
    name: "NoExtensionFoundForFunctionSelector",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "callerAddress",
        type: "address",
      },
    ],
    name: "OwnableCallerNotTheOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableCannotSetZeroAddressAsOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "DataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "OperatorAuthorizationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "notified",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "OperatorRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "TokenIdDataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "force",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "authorizeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "batchCalls",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
    ],
    name: "getDataBatch",
    outputs: [
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "tokenIds",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
    ],
    name: "getDataBatchForTokenIds",
    outputs: [
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
    ],
    name: "getDataForTokenId",
    outputs: [
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "getOperatorsOf",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "isOperatorFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "force",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "notify",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "revokeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "setData",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    name: "setDataBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "tokenIds",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    name: "setDataBatchForTokenIds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "setDataForTokenId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "tokenIdsOf",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "tokenOwnerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "force",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "tokenId",
        type: "bytes32[]",
      },
      {
        internalType: "bool[]",
        name: "force",
        type: "bool[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "transferBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620031c5380380620031c5833981016040819052620000349162000429565b82828260016000848484848484848484816001600160a01b0381166200006d576040516306b620db60e21b815260040160405180910390fd5b6200007881620001c2565b506040805180820190915260048152632936598960e21b6020820152620000c1907feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c9062000230565b620000ed7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af18562000230565b620001197f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db9327568462000230565b604080516020810183905262000162917fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb3910160408051601f1981840301815291905262000230565b50506040805160208101859052620001af93507ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d92500160408051601f1981840301815291905262000289565b5050505050505050505050505062000648565b6000546001600160a01b038281169116146200022d57600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0383161790555b50565b60008281526001602052604090206200024a828262000547565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516200027d919062000613565b60405180910390a25050565b62000295828262000299565b5050565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201620002da576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa82016200031b57604051630eceab6760e31b815260040160405180910390fd5b7f1fd9e056a24d14c4abc642fcc325992a946906d0dbc57dd70278aaf12842024d82016200023057604051634ef6d7fb60e01b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b60005b838110156200038f57818101518382015260200162000375565b50506000910152565b600082601f830112620003aa57600080fd5b81516001600160401b0380821115620003c757620003c76200035c565b604051601f8301601f19908116603f01168101908282118183101715620003f257620003f26200035c565b816040528381528660208588010111156200040c57600080fd5b6200041f84602083016020890162000372565b9695505050505050565b6000806000606084860312156200043f57600080fd5b83516001600160401b03808211156200045757600080fd5b620004658783880162000398565b945060208601519150808211156200047c57600080fd5b506200048b8682870162000398565b604086015190935090506001600160a01b0381168114620004ab57600080fd5b809150509250925092565b600181811c90821680620004cb57607f821691505b602082108103620004ec57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000542576000816000526020600020601f850160051c810160208610156200051d5750805b601f850160051c820191505b818110156200053e5782815560010162000529565b5050505b505050565b81516001600160401b038111156200056357620005636200035c565b6200057b81620005748454620004b6565b84620004f2565b602080601f831160018114620005b357600084156200059a5750858301515b600019600386901b1c1916600185901b1785556200053e565b600085815260208120601f198616915b82811015620005e457888601518255948401946001909101908401620005c3565b5085821015620006035787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600082518060208401526200063481604085016020870162000372565b601f01601f19169190910160400192915050565b612b6d80620006586000396000f3fe60806040526004361061014f5760003560e01c80637e87632c116100b6578063af255b611161006f578063af255b6114610466578063be9f0e6f14610486578063d6c1407c146104a6578063db8c9663146104c6578063dedff9c6146104e6578063f2fde38b14610506576101aa565b80637e87632c146103b55780637f23690c146103d557806386a10ddd146103e85780638da5cb5b146104085780639790242114610426578063a3b261f214610439576101aa565b806349a6078d1161010857806349a6078d146102f1578063511b69521461031e57806354f6127f146103405780636963d4381461036057806370a0823114610380578063715018a6146103a0576101aa565b806301ffc9a7146101eb57806316e023b31461022057806318160ddd1461024d5780631d26fce61461026c578063217b2270146102995780632a3654a4146102d1576101aa565b366101aa57346000036101915760405163e5099ee360e01b81526004016101889060208082526004908201526000604082015260600190565b60405180910390fd5b6040516330fa4a2160e11b815260040160405180910390fd5b600036606060048210156101d557828260405163e5099ee360e01b8152600401610188929190611e0a565b6101df8383610526565b80519350602001915050f35b3480156101f757600080fd5b5061020b610206366004611e39565b61061c565b60405190151581526020015b60405180910390f35b34801561022c57600080fd5b5061024061023b366004611e63565b610650565b6040516102179190611ed5565b34801561025957600080fd5b506002545b604051908152602001610217565b34801561027857600080fd5b5061028c610287366004611fc0565b610663565b6040516102179190612023565b3480156102a557600080fd5b506102b96102b4366004612087565b61074a565b6040516001600160a01b039091168152602001610217565b3480156102dd57600080fd5b5061020b6102ec3660046120bc565b610783565b3480156102fd57600080fd5b5061031161030c366004612087565b61078f565b60405161021791906120e6565b34801561032a57600080fd5b5061033e6103393660046121bb565b6107b1565b005b34801561034c57600080fd5b5061024061035b366004612087565b6107f5565b34801561036c57600080fd5b5061028c61037b366004612233565b610800565b34801561038c57600080fd5b5061025e61039b3660046122a7565b61092f565b3480156103ac57600080fd5b5061033e610950565b3480156103c157600080fd5b5061033e6103d036600461240d565b610964565b61033e6103e33660046124d1565b610a53565b3480156103f457600080fd5b5061033e61040336600461250d565b610a88565b34801561041457600080fd5b506000546001600160a01b03166102b9565b61033e610434366004612563565b610c02565b34801561044557600080fd5b506104596104543660046122a7565b610cc2565b60405161021791906125bc565b34801561047257600080fd5b5061033e6104813660046125f4565b610ce6565b34801561049257600080fd5b5061033e6104a136600461265b565b610d00565b3480156104b257600080fd5b5061033e6104c13660046126d8565b610dc5565b3480156104d257600080fd5b5061033e6104e13660046125f4565b610dd8565b3480156104f257600080fd5b5061028c610501366004612711565b610ebc565b34801561051257600080fd5b5061033e6105213660046122a7565b610f66565b6060600061053f6000356001600160e01b031916610fa1565b5090506001600160a01b0381166105775760405163bb370b2b60e01b81526001600160e01b0319600035166004820152602401610188565b600080826001600160a01b0316348787333460405160200161059c9493929190612745565b60408051601f19818403018152908290526105b691612770565b60006040518083038185875af1925050503d80600081146105f3576040519150601f19603f3d011682016040523d82523d6000602084013e6105f8565b606091505b5091509150811561060d579250610616915050565b80518060208301fd5b92915050565b60006001600160e01b03198216631d138b8360e11b148061064157506106418261101f565b80610616575061061682611044565b606061065c838361107b565b9392505050565b60608151835114610687576040516317d38eff60e11b815260040160405180910390fd5b82516001600160401b038111156106a0576106a0611ee8565b6040519080825280602002602001820160405280156106d357816020015b60608152602001906001900390816106be5790505b50905060005b83518110156107435761071e8482815181106106f7576106f761278c565b60200260200101518483815181106107115761071161278c565b602002602001015161107b565b8282815181106107305761073061278c565b60209081029190910101526001016106d9565b5092915050565b6000818152600360205260408120546001600160a01b03168061061657604051635747cd1b60e11b815260048101849052602401610188565b600061065c8383611129565b606061079a82611166565b60008281526005602052604090206106169061119e565b6107bb3384611129565b6107e157604051631294d2a960e01b815260048101849052336024820152604401610188565b6107ee85858585856111ab565b5050505050565b60606106168261138d565b6060816001600160401b0381111561081a5761081a611ee8565b60405190808252806020026020018201604052801561084d57816020015b60608152602001906001900390816108385790505b50905060005b8281101561074357600080308686858181106108715761087161278c565b905060200281019061088391906127a2565b6040516108919291906127ef565b600060405180830381855af49150503d80600081146108cc576040519150601f19603f3d011682016040523d82523d6000602084013e6108d1565b606091505b509150915081610907578051156108eb5780518082602001fd5b60405163234eb81960e01b815260048101849052602401610188565b8084848151811061091a5761091a61278c565b60209081029190910101525050600101610853565b6001600160a01b03811660009081526004602052604081206106169061142f565b610958611439565b6109626000611475565b565b8451845181141580610977575083518114155b80610983575082518114155b8061098f575081518114155b156109ad576040516393a8311960e01b815260040160405180910390fd5b60005b81811015610a4a57610a428782815181106109cd576109cd61278c565b60200260200101518783815181106109e7576109e761278c565b6020026020010151878481518110610a0157610a0161278c565b6020026020010151878581518110610a1b57610a1b61278c565b6020026020010151878681518110610a3557610a3561278c565b60200260200101516107b1565b6001016109b0565b50505050505050565b610a5b611439565b3415610a7a5760405163f36ba73760e01b815260040160405180910390fd5b610a8482826114e3565b5050565b6000610a938361074a565b90506001600160a01b0381163314610ad657604051632d938f5160e11b81526001600160a01b038216600482015260248101849052336044820152606401610188565b6001600160a01b038416610afd57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316816001600160a01b031603610b2f576040516344fed6b160e11b815260040160405180910390fd5b6000838152600560205260408120610b47908661152d565b905080610b79576040516314ec4d6d60e31b81526001600160a01b038616600482015260248101859052604401610188565b83826001600160a01b0316866001600160a01b03167f1b1b58aa2ec0cec2228b2d37124556d41f5a1f7b12f089171f896cc23667121586604051610bbd9190611ed5565b60405180910390a460003385600186604051602001610bdf94939291906127ff565b6040516020818303038152906040529050610bfa8682611542565b505050505050565b610c0a611439565b3415610c295760405163f36ba73760e01b815260040160405180910390fd5b8051825114610c4b57604051633bcc897960e01b815260040160405180910390fd5b8151600003610c6d576040516397da5f9560e01b815260040160405180910390fd5b60005b8251811015610cbd57610cb5838281518110610c8e57610c8e61278c565b6020026020010151838381518110610ca857610ca861278c565b60200260200101516114e3565b600101610c70565b505050565b6001600160a01b03811660009081526004602052604090206060906106169061119e565b610cee611439565b610cfa8484848461156d565b50505050565b610d08611439565b81518351141580610d1b57508051825114155b15610d39576040516317d38eff60e11b815260040160405180910390fd5b8251600003610d5b576040516380c9830560e01b815260040160405180910390fd5b60005b8351811015610cfa57610dbd848281518110610d7c57610d7c61278c565b6020026020010151848381518110610d9657610d9661278c565b6020026020010151848481518110610db057610db061278c565b60200260200101516116dd565b600101610d5e565b610dcd611439565b610cbd8383836116dd565b6000610de38461074a565b9050336001600160a01b03821614610e36576001600160a01b0385163314610e365760405163760b5acd60e01b81523360048201526001600160a01b038216602482015260448101859052606401610188565b6001600160a01b038516610e5d57604051639577b8b360e01b815260040160405180910390fd5b846001600160a01b0316816001600160a01b031603610e8f576040516344fed6b160e11b815260040160405180910390fd5b610e9c858286868661173f565b82156107ee5760008185600085604051602001610bdf94939291906127ff565b606081516001600160401b03811115610ed757610ed7611ee8565b604051908082528060200260200182016040528015610f0a57816020015b6060815260200190600190039081610ef55790505b50905060005b8251811015610f6057610f3b838281518110610f2e57610f2e61278c565b602002602001015161138d565b828281518110610f4d57610f4d61278c565b6020908102919091010152600101610f10565b50919050565b610f6e611439565b6001600160a01b038116610f95576040516306b620db60e21b815260040160405180910390fd5b610f9e81611475565b50565b60008080610fc6696773c5a04a6d4300884b60b11b6001600160e01b031986166117df565b90506000610fd38261138d565b90508051601414158015610fe75750805115155b1561100757806040516342bfe79f60e01b81526004016101889190611ed5565b61101081612838565b60601c95600195509350505050565b60006001600160e01b0319821663a918fa6b60e01b1480610616575061061682611833565b6000806110576301ffc9a760e01b610fa1565b5090506001600160a01b0381166110715750600092915050565b61065c8184611868565b600082815260066020908152604080832084845290915290208054606091906110a39061286f565b80601f01602080910402602001604051908101604052809291908181526020018280546110cf9061286f565b801561111c5780601f106110f15761010080835404028352916020019161111c565b820191906000526020600020905b8154815290600101906020018083116110ff57829003601f168201915b5050505050905092915050565b60006111348261074a565b6001600160a01b0316836001600160a01b0316148061065c5750600082815260056020526040902061065c90846118f1565b6000818152600360205260409020546001600160a01b0316610f9e57604051635747cd1b60e11b815260048101829052602401610188565b6060600061065c83611913565b60006111b68461074a565b9050856001600160a01b0316816001600160a01b03161461120457604051632d938f5160e11b81526001600160a01b0380831660048301526024820186905287166044820152606401610188565b6001600160a01b03851661122b576040516324ecef4d60e01b815260040160405180910390fd5b60006112368561074a565b9050806001600160a01b0316826001600160a01b03161461128457604051635a9c31d360e01b8152600481018690526001600160a01b03808416602483015282166044820152606401610188565b61128e878661196e565b6001600160a01b03871660009081526004602052604090206112b090866119c6565b506001600160a01b03861660009081526004602052604090206112d390866119d2565b506000858152600360205260409081902080546001600160a01b0319166001600160a01b0389811691821790925591518792918a16907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061133a9033908a908a906128a3565b60405180910390a46000338888888760405160200161135d9594939291906128d8565b604051602081830303815290604052905061137888826119de565b611383878683611a09565b5050505050505050565b60008181526001602052604090208054606091906113aa9061286f565b80601f01602080910402602001604051908101604052809291908181526020018280546113d69061286f565b80156114235780601f106113f857610100808354040283529160200191611423565b820191906000526020600020905b81548152906001019060200180831161140657829003601f168201915b50505050509050919050565b6000610616825490565b3361144c6000546001600160a01b031690565b6001600160a01b0316146109625760405163bf1169c560e01b8152336004820152602401610188565b6000546001600160a01b03828116911614610f9e57600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0383166001600160a01b031990911617905550565b7f098a16c9e50e3e99b3e797305c146898d294e5aec55a47e213cb3611ccf17e73820161152357604051631b32400560e11b815260040160405180910390fd5b610a848282611b11565b600061065c836001600160a01b038416611b1b565b610a84827f8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f0097083611b6a565b6001600160a01b038416611594576040516324ecef4d60e01b815260040160405180910390fd5b6000838152600360205260409020546001600160a01b0316156115cd576040516334c7b51160e01b815260048101849052602401610188565b6000838152600360205260409020546001600160a01b031615611606576040516334c7b51160e01b815260048101849052602401610188565b60026000815461161590612929565b909155506001600160a01b038416600090815260046020526040902061163b90846119d2565b5060008381526003602052604080822080546001600160a01b0319166001600160a01b03881690811790915590518592907fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf9061169d903390889088906128a3565b60405180910390a460003360008686856040516020016116c19594939291906128d8565b60405160208183030381529060405290506107ee858483611a09565b60008381526006602090815260408083208584529091529020611700828261298a565b5081837fa6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb836040516117329190611ed5565b60405180910390a3505050565b60008381526005602052604081206117579087611bb7565b905080611789576040516312a8c6a360e21b81526001600160a01b038716600482015260248101859052604401610188565b83856001600160a01b0316876001600160a01b03167fc78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c86866040516117cf929190612a49565b60405180910390a4505050505050565b604080516001600160b01b0319841660208201526000602a82018190526001600160601b03198416602c8301529182910160405160208183030381529060405290508061182b90612a64565b949350505050565b60006001600160e01b031982166318a6a9a560e21b148061061657506301ffc9a760e01b6001600160e01b0319831614610616565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d915060005190508280156118da575060208210155b80156118e65750600081115b979650505050505050565b6001600160a01b0381166000908152600183016020526040812054151561065c565b60608160000180548060200260200160405190810160405280929190818152602001828054801561142357602002820191906000526020600020905b81548152602001906001019080831161194f5750505050509050919050565b6000818152600560205260408120906119868261142f565b90506000805b82811015610bfa5761199f846000611bcc565b91506119be82878760006040518060200160405280600081525061173f565b60010161198c565b600061065c8383611bd8565b600061065c8383611b1b565b610a84827fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab0083611b6a565b611a1a83631aed5a8560e21b611868565b15611ab457604051631aed5a8560e21b81526001600160a01b03841690636bb56a1490611a6d907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d908590600401612a88565b6000604051808303816000875af1158015611a8c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cfa9190810190612aa1565b81610cbd576001600160a01b0383163b15611aed57604051634349776d60e01b81526001600160a01b0384166004820152602401610188565b604051630317313760e01b81526001600160a01b0384166004820152602401610188565b610a848282611ccb565b6000818152600183016020526040812054611b6257508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610616565b506000610616565b611b846001600160a01b038416631aed5a8560e21b611868565b15610cbd57604051631aed5a8560e21b81526001600160a01b03841690636bb56a1490611a6d9085908590600401612a88565b600061065c836001600160a01b038416611bd8565b600061065c8383611de0565b60008181526001830160205260408120548015611cc1576000611bfc600183612b0e565b8554909150600090611c1090600190612b0e565b9050818114611c75576000866000018281548110611c3057611c3061278c565b9060005260206000200154905080876000018481548110611c5357611c5361278c565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611c8657611c86612b21565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610616565b6000915050610616565b7f2145e1d6d074577dc71ef54c3807742b41b053a9352ae6b491331509acb9750f8201611d0b576040516385c169bd60e01b815260040160405180910390fd5b7fd0f59754f88971fe6bc5a6618cc9d5f1e859c58d16b22d1c7b2d3e2b246cd8aa8201611d4b57604051630eceab6760e31b815260040160405180910390fd5b7f1fd9e056a24d14c4abc642fcc325992a946906d0dbc57dd70278aaf12842024d8201611d8b57604051634ef6d7fb60e01b815260040160405180910390fd5b6000828152600160205260409020611da3828261298a565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051611dd49190611ed5565b60405180910390a25050565b6000826000018281548110611df757611df761278c565b9060005260206000200154905092915050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b600060208284031215611e4b57600080fd5b81356001600160e01b03198116811461065c57600080fd5b60008060408385031215611e7657600080fd5b50508035926020909101359150565b60005b83811015611ea0578181015183820152602001611e88565b50506000910152565b60008151808452611ec1816020860160208601611e85565b601f01601f19169290920160200192915050565b60208152600061065c6020830184611ea9565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611f2657611f26611ee8565b604052919050565b60006001600160401b03821115611f4757611f47611ee8565b5060051b60200190565b600082601f830112611f6257600080fd5b81356020611f77611f7283611f2e565b611efe565b8083825260208201915060208460051b870101935086841115611f9957600080fd5b602086015b84811015611fb55780358352918301918301611f9e565b509695505050505050565b60008060408385031215611fd357600080fd5b82356001600160401b0380821115611fea57600080fd5b611ff686838701611f51565b9350602085013591508082111561200c57600080fd5b5061201985828601611f51565b9150509250929050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561207a57603f19888603018452612068858351611ea9565b9450928501929085019060010161204c565b5092979650505050505050565b60006020828403121561209957600080fd5b5035919050565b80356001600160a01b03811681146120b757600080fd5b919050565b600080604083850312156120cf57600080fd5b6120d8836120a0565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b818110156121275783516001600160a01b031683529284019291840191600101612102565b50909695505050505050565b803580151581146120b757600080fd5b60006001600160401b0382111561215c5761215c611ee8565b50601f01601f191660200190565b600082601f83011261217b57600080fd5b8135612189611f7282612143565b81815284602083860101111561219e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156121d357600080fd5b6121dc866120a0565b94506121ea602087016120a0565b9350604086013592506121ff60608701612133565b915060808601356001600160401b0381111561221a57600080fd5b6122268882890161216a565b9150509295509295909350565b6000806020838503121561224657600080fd5b82356001600160401b038082111561225d57600080fd5b818501915085601f83011261227157600080fd5b81358181111561228057600080fd5b8660208260051b850101111561229557600080fd5b60209290920196919550909350505050565b6000602082840312156122b957600080fd5b61065c826120a0565b600082601f8301126122d357600080fd5b813560206122e3611f7283611f2e565b8083825260208201915060208460051b87010193508684111561230557600080fd5b602086015b84811015611fb55761231b816120a0565b835291830191830161230a565b600082601f83011261233957600080fd5b81356020612349611f7283611f2e565b8083825260208201915060208460051b87010193508684111561236b57600080fd5b602086015b84811015611fb55761238181612133565b8352918301918301612370565b600082601f83011261239f57600080fd5b813560206123af611f7283611f2e565b82815260059290921b840181019181810190868411156123ce57600080fd5b8286015b84811015611fb55780356001600160401b038111156123f15760008081fd5b6123ff8986838b010161216a565b8452509183019183016123d2565b600080600080600060a0868803121561242557600080fd5b85356001600160401b038082111561243c57600080fd5b61244889838a016122c2565b9650602088013591508082111561245e57600080fd5b61246a89838a016122c2565b9550604088013591508082111561248057600080fd5b61248c89838a01611f51565b945060608801359150808211156124a257600080fd5b6124ae89838a01612328565b935060808801359150808211156124c457600080fd5b506122268882890161238e565b600080604083850312156124e457600080fd5b8235915060208301356001600160401b0381111561250157600080fd5b6120198582860161216a565b60008060006060848603121561252257600080fd5b61252b846120a0565b92506020840135915060408401356001600160401b0381111561254d57600080fd5b6125598682870161216a565b9150509250925092565b6000806040838503121561257657600080fd5b82356001600160401b038082111561258d57600080fd5b61259986838701611f51565b935060208501359150808211156125af57600080fd5b506120198582860161238e565b6020808252825182820181905260009190848201906040850190845b81811015612127578351835292840192918401916001016125d8565b6000806000806080858703121561260a57600080fd5b612613856120a0565b93506020850135925061262860408601612133565b915060608501356001600160401b0381111561264357600080fd5b61264f8782880161216a565b91505092959194509250565b60008060006060848603121561267057600080fd5b83356001600160401b038082111561268757600080fd5b61269387838801611f51565b945060208601359150808211156126a957600080fd5b6126b587838801611f51565b935060408601359150808211156126cb57600080fd5b506125598682870161238e565b6000806000606084860312156126ed57600080fd5b833592506020840135915060408401356001600160401b0381111561254d57600080fd5b60006020828403121561272357600080fd5b81356001600160401b0381111561273957600080fd5b61182b84828501611f51565b8385823760609290921b6001600160601b031916919092019081526014810191909152603401919050565b60008251612782818460208701611e85565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126127b957600080fd5b8301803591506001600160401b038211156127d357600080fd5b6020019150368190038213156127e857600080fd5b9250929050565b8183823760009101908152919050565b60018060a01b0385168152836020820152821515604082015260806060820152600061282e6080830184611ea9565b9695505050505050565b805160208201516001600160601b031980821692919060148310156128675780818460140360031b1b83161693505b505050919050565b600181811c9082168061288357607f821691505b602082108103610f6057634e487b7160e01b600052602260045260246000fd5b6001600160a01b038416815282151560208201526060604082018190526000906128cf90830184611ea9565b95945050505050565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a0608082018190526000906118e690830184611ea9565b634e487b7160e01b600052601160045260246000fd5b60006001820161293b5761293b612913565b5060010190565b601f821115610cbd576000816000526020600020601f850160051c8101602086101561296b5750805b601f850160051c820191505b81811015610bfa57828155600101612977565b81516001600160401b038111156129a3576129a3611ee8565b6129b7816129b1845461286f565b84612942565b602080601f8311600181146129ec57600084156129d45750858301515b600019600386901b1c1916600185901b178555610bfa565b600085815260208120601f198616915b82811015612a1b578886015182559484019460019091019084016129fc565b5085821015612a395787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b821515815260406020820152600061182b6040830184611ea9565b80516020808301519190811015610f605760001960209190910360031b1b16919050565b82815260406020820152600061182b6040830184611ea9565b600060208284031215612ab357600080fd5b81516001600160401b03811115612ac957600080fd5b8201601f81018413612ada57600080fd5b8051612ae8611f7282612143565b818152856020838501011115612afd57600080fd5b6128cf826020830160208601611e85565b8181038181111561061657610616612913565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220135369295df82489f95097e92ce524ff2249985d337a467b5accc000dd65023964736f6c63430008180033";

type MunchkinsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MunchkinsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Munchkins__factory extends ContractFactory {
  constructor(...args: MunchkinsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    ticker: string,
    newOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, ticker, newOwner, overrides || {});
  }
  override deploy(
    name: string,
    ticker: string,
    newOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, ticker, newOwner, overrides || {}) as Promise<
      Munchkins & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Munchkins__factory {
    return super.connect(runner) as Munchkins__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MunchkinsInterface {
    return new Interface(_abi) as MunchkinsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Munchkins {
    return new Contract(address, _abi, runner) as unknown as Munchkins;
  }
}
